{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","Home","src","alt","to","UserProfile","userName","memberSince","style","textDecoration","color","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","textAlign","fontFamily","onSubmit","marginBottom","fontWeight","marginRight","width","whiteSpace","type","name","defaultValue","onChange","buttonStyle","padding","borderRadius","border","backgroundColor","cursor","maxWidth","tableHeaderStyle","tableDataStyle","inputStyle","margin","Credits","useState","credits","setCredits","description","setDescription","amount","setAmount","useEffect","axios","get","then","response","data","catch","error","console","toFixed","borderCollapse","map","credit","index","Date","date","toLocaleDateString","placeholder","onClick","newCredit","parseFloat","toISOString","updateBalance","Debits","debits","event","newDebit","id","Math","random","toString","substr","addDebit","required","App","logInInfo","newUser","currentUser","newBalance","prevState","debitList","creditList","fetch","json","totalDebits","reduce","acc","debit","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0397863.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {this.props.accountBalance}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: '#4189bf'}}>Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div style={{textAlign: 'center', fontFamily: 'Ariel, sans-serif'}}>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div style={{marginBottom: '10px'}}>\r\n            <label style={{fontWeight: 'bold', marginRight: '10px', width: '120px', whiteSpace: 'nowrap'}}>User Name</label>\r\n              <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange}/>\r\n          </div>\r\n\r\n          <div style={{marginBottom: '10px'}}>\r\n            <label style={{fontWeight: 'bold', marginRight: '10px', width: '120px', whiteSpace: 'nowrap'}}>Password</label>\r\n              <input type=\"password\" name=\"password\" />\r\n          </div>\r\n\r\n          <button style={buttonStyle}>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\" style={{ textDecoration: 'none', color: '#4189bf'}}>Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  border: 'none',\r\n  backgroundColor: '#4189bf',\r\n  color: 'white',\r\n  cursor: 'pointer',\r\n  width: '100%',\r\n  maxWidth: '300px'\r\n};\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { useState, useEffect } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Credits = (props) => {\r\n  const [credits, setCredits] = useState([]);\r\n  const [description, setDescription] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch credits from the API on component mount\r\n    axios.get('https://johnnylaicode.github.io/api/credits.json')\r\n      .then(response => setCredits(response.data))\r\n      .catch(error => console.error(\"Error fetching credits:\", error));\r\n  }, []);\r\n\r\n  const handleAddCredit = () => {\r\n    if (description && amount) {\r\n      const newCredit = {\r\n        description,\r\n        amount: parseFloat(amount),\r\n        date: new Date().toISOString(),\r\n      };\r\n\r\n      // Update the credits list with the new credit entry\r\n      setCredits([...credits, newCredit]);\r\n\r\n      // Update the account balance\r\n      props.updateBalance(props.accountBalance + newCredit.amount);\r\n\r\n      // Clear input fields\r\n      setDescription('');\r\n      setAmount('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', fontFamily: 'Ariel, sans-serif' }}>\r\n      <h1> Account Balance: ${props.accountBalance.toFixed(2)} </h1>\r\n\r\n      {/* Credits Table */}\r\n      <table style={{ margin: '20px auto', borderCollapse: 'collapse', width: '80%' }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={tableHeaderStyle}>Description</th>\r\n            <th style={tableHeaderStyle}>Amount</th>\r\n            <th style={tableHeaderStyle}>Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {credits.map((credit, index) => (\r\n            <tr key={index}>\r\n              <td style={tableDataStyle}>{credit.description}</td>\r\n              <td style={tableDataStyle}>${credit.amount.toFixed(2)}</td>\r\n              <td style={tableDataStyle}>{new Date(credit.date).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Add New Credit Form */}\r\n      <h2>Add a New Credit</h2>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <input \r\n          type=\"text\" \r\n          value={description} \r\n          onChange={(e) => setDescription(e.target.value)} \r\n          placeholder=\"Description\" \r\n          style={inputStyle} \r\n        />\r\n        <input \r\n          type=\"number\" \r\n          value={amount} \r\n          onChange={(e) => setAmount(e.target.value)} \r\n          placeholder=\"Amount\" \r\n          style={inputStyle} \r\n        />\r\n\r\n        <button onClick={handleAddCredit} style={buttonStyle}>Add Credit</button>\r\n      </div>\r\n\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: '#4189bf'}}>Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Visual Elements\r\nconst tableHeaderStyle = {\r\n  backgroundColor: '#4189bf',\r\n  color: 'white',\r\n  padding: '10px',\r\n  border: '1px solid #ddd',\r\n};\r\n\r\nconst tableDataStyle = {\r\n  padding: '10px',\r\n  border: '1px solid #ddd',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst inputStyle = {\r\n  padding: '10px',\r\n  margin: '0 5px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  border: 'none',\r\n  backgroundColor: '#4189bf',\r\n  color: 'white',\r\n  cursor: 'pointer',\r\n};\r\n\r\nexport default Credits;","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\n\r\nconst Debits = (props) => {\r\n\r\n  const [description, setDescription] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n\r\n\r\n  const handleAddDebit = (event) => {\r\n    event.preventDefault();\r\n    const newDebit = {\r\n      id: Math.random().toString(36).substr(2, 9),\r\n      description: description,\r\n      amount: parseFloat(amount),\r\n      date: new Date().toISOString(),\r\n    };\r\n    props.addDebit(newDebit);\r\n    props.updateBalance(props.accountBalance - newDebit.amount);\r\n    setDescription(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', fontFamily: 'Ariel, sans-serif' }}>\r\n      <h1> Account Balance: ${props.accountBalance.toFixed(2)} </h1>\r\n      <table style={{ margin: '20px auto', borderCollapse: 'collapse', width: '80%' }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={tableHeaderStyle}>Description</th>\r\n              <th style={tableHeaderStyle}>Amount</th>\r\n              <th style={tableHeaderStyle}>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n         \r\n         props.debits.map((debits, index) => (\r\n            <tr key={index}>\r\n              <td style={tableDataStyle}>{debits.description}</td>\r\n              <td style={tableDataStyle}>${debits.amount.toFixed(2)}</td>\r\n              <td style={tableDataStyle}>{new Date(debits.date).toLocaleDateString()}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        </table>\r\n\r\n        <h2>Add a New Credit</h2>\r\n      <form onSubmit={handleAddDebit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          style={inputStyle}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          style={inputStyle}\r\n          required\r\n        />\r\n        <button type=\"submit\" style={buttonStyle}>Add Debit</button>\r\n      </form>\r\n\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst tableHeaderStyle = {\r\n  backgroundColor: '#4189bf',\r\n  color: 'white',\r\n  padding: '10px',\r\n  border: '1px solid #ddd',\r\n};\r\n\r\nconst tableDataStyle = {\r\n  padding: '10px',\r\n  border: '1px solid #ddd',\r\n  textAlign: 'center',\r\n};\r\n\r\nconst inputStyle = {\r\n  padding: '10px',\r\n  margin: '0 5px',\r\n  borderRadius: '5px',\r\n  border: '1px solid #ccc',\r\n};\r\n\r\nconst buttonStyle = {\r\n  padding: '10px 20px',\r\n  borderRadius: '5px',\r\n  border: 'none',\r\n  backgroundColor: '#4189bf',\r\n  color: 'white',\r\n  cursor: 'pointer',\r\n};\r\nexport default Debits;\r\n","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n// Import other components\r\nimport Home from './components/Home';\r\nimport UserProfile from './components/UserProfile';\r\nimport LogIn from './components/Login';\r\nimport Credits from './components/Credits';\r\nimport Debits from './components/Debits';\r\n\r\nclass App extends Component {\r\n  constructor() {  // Create and initialize state\r\n    super(); \r\n    this.state = {\r\n      accountBalance: 1234567.89,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: 'Joe Smith',\r\n        memberSince: '11/22/99',\r\n      }\r\n    };\r\n  }\r\n\r\n  // Lifecycle method to fetch debitList data when the component mounts\r\n  componentDidMount() {\r\n    // Fetch Debits\r\n    fetch('https://johnnylaicode.github.io/api/debits.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({ debitList: data });\r\n        // Optionally, update account balance based on debits\r\n        const totalDebits = data.reduce((acc, debit) => acc + debit.amount, 0);\r\n        this.setState(prevState => ({\r\n          accountBalance: prevState.accountBalance - totalDebits\r\n        }));\r\n      })\r\n      .catch(error => console.error('Error fetching debits:', error));\r\n  }\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {  \r\n    const newUser = {...this.state.currentUser};\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({currentUser: newUser})\r\n  }\r\n\r\n  // Update the account balance - used for Credits\r\n  updateBalance = (newBalance) => {\r\n    this.setState({ accountBalance: newBalance });\r\n  }\r\n\r\n\r\n  // Function to add a new debit transaction\r\n  addDebit = (newDebit) => {\r\n    this.setState(prevState => ({\r\n      debitList: [...prevState.debitList, newDebit],\r\n      accountBalance: prevState.accountBalance - newDebit.amount\r\n    }));\r\n  }\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {  \r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\r\n    const UserProfileComponent = () => (\r\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\r\n    )\r\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\r\n    const CreditsComponent = () => (\r\n      <Credits credits={this.state.creditList}\r\n               accountBalance={this.state.accountBalance} // Helps pass accountBalance as a prop (in credits)\r\n               updateBalance={this.updateBalance}         // Helps pass updateBalance as a prop (in credits)\r\n      />\r\n    )\r\n    const DebitsComponent = () => (\r\n      <Debits \r\n        debits={this.state.debitList} \r\n        addDebit={this.addDebit} // Pass addDebit function as a prop\r\n        accountBalance={this.state.accountBalance} // Helps pass accountBalance as a prop (in credits)\r\n        updateBalance={this.updateBalance}         // Helps pass updateBalance as a prop (in credits)\r\n      />\r\n    );\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/bank-of-react-starter-code\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent}/>\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\r\n          <Route exact path=\"/login\" render={LogInComponent}/>\r\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\r\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}